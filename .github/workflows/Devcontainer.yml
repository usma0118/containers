---
  # yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
  name: "Devcontainer"
  on:
    workflow_dispatch:
      inputs:
        logLevel:
          description: 'Log level'
          required: true
          default: 'warning'
          type: choice
          options:
          - info
          - warning
          - debug
    push:
      branches: ["main"]
      tags:
        - '**'
      paths: [".devcontainer/base/**"]
    pull_request:
      branches: ["main"]
      paths: [".devcontainer/base/**"]
  concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true
  env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}/devcontainers/base
  jobs:
    build-docker-image:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
        id-token: write
        attestations: write
      strategy:
        fail-fast: true
      steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64,arm
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - if: ${{ github.event_name != 'pull_request' }}
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@f7b4ed12385588c3f9bc252f0a2b520d83b52d48
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short
          flavor: |
            latest=auto
            prefix=alpine-
            suffix=
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:.devcontainer/base"
          sbom: true
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha
          cache-to: type=gha,mode=max
      - name: Build and push
        uses: devcontainers/ci@v0.3
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: true
        with:
          imageName: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          cacheFrom: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          imageTag: ${{ steps.meta.outputs.tags }}
          platform: linux/amd64 #,linux/arm64
          configFile: ".devcontainer/base/devcontainer.json"
          push: ${{ github.event_name == 'pull_request' && 'never' || 'always' }}
