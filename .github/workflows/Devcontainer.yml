# .github/workflows/devcontainer.yml
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Devcontainer

on:
  workflow_dispatch: {}
  push:
    branches: [main]
    tags: ['v**']
    paths: [".devcontainer/base/**"]
  pull_request:
    branches: [main]
    paths: [".devcontainer/base/**"]
  schedule:
    - cron: "0 3 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/devcontainers/base
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Check GitHub API rate limit
      #   run: curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/rate_limit
      # Compute *bare* tags for devcontainers/ci
      - name: Compute tags
        id: tags
        shell: bash
        run: |
          set -euo pipefail
          SHORT_SHA="${GITHUB_SHA::7}"
          TAGS="alpine-sha-${SHORT_SHA}"
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            TAGS="alpine-latest,${TAGS}"
          fi
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VER="${GITHUB_REF#refs/tags/}"
            MAJMIN="${VER%.*}"
            TAGS="alpine-${VER},alpine-${MAJMIN},alpine-latest,${TAGS}"
          fi
          echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"

      - name: Build and push via Dev Containers CI
        uses: devcontainers/ci@v0.3
        env:
          BUILDX_NO_DEFAULT_ATTESTATIONS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configFile: ".devcontainer/base/devcontainer.json"
          imageName: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          imageTag: ${{ steps.tags.outputs.tags }}   # bare tags only
          platform: ${{ env.PLATFORMS }}
          push: ${{ github.event_name == 'pull_request' && 'never' || 'always' }}
          cacheFrom: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
          cacheTo:   ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
